from __future__ import annotations
import datetime as _dt
from pathlib import Path
from typing import Optional

from telegram import Update
from telegram.ext import ContextTypes

# =========================
# פתיחה בלבד, ללא תפריטים
# =========================

_VERSION_CACHE: Optional[str] = None
def _get_version() -> str:
    """קורא את קובץ VERSION אם קיים, אחרת מחזיר 'dev'."""
    global _VERSION_CACHE
    if _VERSION_CACHE is not None:
        return _VERSION_CACHE
    p = Path(__file__).resolve().parent / "VERSION"
    _VERSION_CACHE = p.read_text(encoding="utf-8").strip() if p.exists() else "dev"
    return _VERSION_CACHE

def _witty_greeting(now: Optional[_dt.datetime] = None) -> str:
    """
    ברכה צינית/קלילה שמשתנה כל שעתיים (ללא שמירת מצב).
    בחירה דטרמיניסטית לפי חלון של שעתיים, כדי שכל המשתמשים יראו אותו דבר בחלון הזמן.
    """
    now = now or _dt.datetime.now()
    slot = (now.hour // 2)  # חלון של שעתיים
    msgs = [
        "היי, זה טוסטוס. קפה לאורך המסלול עלייך ☕️, אבל המחיר עלינו.",
        "שלום, כאן טוסטוס. מבצע טוב יותר ממחירי duty free? אולי. 🛍️",
        "ברוך הבא! טוסטוס מוצא כנפיים במחירים — ואתה מחליט לאן. 🪽",
        "הגעת בזמן. אנחנו בשיא חדות הרדאר ✈️🛰️ (בערך).",
        "חסכת להגיע לשדה? יופי. עכשיו נחסוך גם במחיר. 💸",
        "רגע לפני שמתרסקות הכיסאות — נתפוס דילים טובים. 🪑😅",
    ]
    msg = msgs[slot % len(msgs)]
    ver = _get_version()
    return f"{msg}\nגרסה: {ver}"

# =========================
# Handlers
# =========================

async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    מסך פתיחה: רק ברכה + גרסה. ללא תפריטים, ללא תקצירים.
    """
    text = _witty_greeting()
    await update.effective_message.reply_text(text)

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    לעת עתה אין תפריטים במסך הפתיחה, אז נענה בנימוס ונחזיר לברכה.
    שומר רק כדי שהבוט לא יקרוס אם יש callbacks ישנים בתור.
    """
    if update.callback_query:
        q = update.callback_query
        await q.answer()
        # הכל חוזר לפתיחה
        await q.edit_message_text(_witty_greeting())
